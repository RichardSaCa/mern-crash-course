name: Build, Test, and Publish

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

 # Instalar dependencias del backend
      - name: Install backend dependencies
        run: npm ci
        working-directory: ./backend

      # Construir el backend
      - name: Build backend
        run: npm run build --if-present
        working-directory: ./backend

      # Instalar dependencias del frontend
      - name: Install frontend dependencies
        run: npm ci
        working-directory: ./frontend

      # Construir el frontend
      - name: Build frontend
        run: npm run build --if-present
        working-directory: ./frontend

      - name: Obtener Tag
        id: obtener_tag
        run: |
          TAG=$(cat .env | grep PAM_APP_VERSION | awk -F '=' '{print $2}')
          echo "TAG=$TAG" >> $GITHUB_ENV
          echo $TAG

      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v5.0.0
        with:
          images: ghcr.io/${{github.repository}}

        #logear a GitHub Container Registry
      - name: Login to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3.0.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5.0.0
        env:
            DOCKER_BUILDKIT: 1
          with:
            context: .
            file: ./Dockerfile # Aseg√∫rate de que esta ruta apunta al Dockerfile
            push: true
            tags: ${{ steps.docker_meta.outputs.tags }}
            labels: ${{ steps.docker_meta.outputs.labels }}